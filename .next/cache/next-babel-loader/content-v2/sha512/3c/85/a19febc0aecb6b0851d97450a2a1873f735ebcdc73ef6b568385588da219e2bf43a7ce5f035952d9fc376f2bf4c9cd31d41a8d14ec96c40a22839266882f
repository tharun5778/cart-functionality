{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\bitelit\\\\funloop\\\\component\\\\castscreen.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport axios from 'axios';\n\nclass CartScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"removeFromCart\", async item => {\n      var element = {};\n      element.productID = item.id;\n      var config = {\n        method: 'delete',\n        url: 'http://localhost:4000/cartItems',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      config.data = element;\n      console.log(config);\n      const {\n        products\n      } = this.state.cartItem.filter(i => {\n        return i.id != item.id;\n      });\n      console.log(products);\n      axios(config).then(function (response) {\n        // this.setState({cartProducts: products})\n        console.log(JSON.stringify(response.data));\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n\n    this.state = {\n      cartProducts: []\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      cartProducts: this.props.cartProducts\n    });\n  }\n\n  render() {\n    console.log(this.state.cartProducts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.cartProducts.map(cartItem => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: cartItem.desc1ription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: cartItem.productID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: cartItem.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: cartItem.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.removeFromCart(cartItem),\n            children: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CartScreen;","map":{"version":3,"sources":["E:/bitelit/funloop/component/castscreen.js"],"names":["React","Component","useRouter","Link","axios","CartScreen","constructor","props","item","element","productID","id","config","method","url","headers","data","console","log","products","state","cartItem","filter","i","then","response","JSON","stringify","catch","error","cartProducts","componentWillMount","setState","render","map","desc1ription","price","quantity","removeFromCart"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,4CAWF,MAAOC,IAAP,IAAc;AAC7B,UAAIC,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,CAACC,SAAR,GAAoBF,IAAI,CAACG,EAAzB;AACA,UAAIC,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAE,QADG;AAEXC,QAAAA,GAAG,EAAE,iCAFM;AAGXC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHE,OAAb;AAOAH,MAAAA,MAAM,CAACI,IAAP,GAAcP,OAAd;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,YAAM;AAACO,QAAAA;AAAD,UAAa,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA4BC,CAAD,IAAO;AACjD,eAAOA,CAAC,CAACZ,EAAF,IAAQH,IAAI,CAACG,EAApB;AACH,OAFkB,CAAnB;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACAf,MAAAA,KAAK,CAACQ,MAAD,CAAL,CACCY,IADD,CACM,UAAUC,QAAV,EAAoB;AAEtB;AACFR,QAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACT,IAAxB,CAAZ;AAED,OAND,EAOCY,KAPD,CAOO,UAAUC,KAAV,EAAiB;AACtBZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,OATD;AAWD,KAtCkB;;AAEjB,SAAKT,KAAL,GAAa;AACXU,MAAAA,YAAY,EAAC;AADF,KAAb;AAGD;;AAEDC,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,QAAL,CAAc;AAACF,MAAAA,YAAY,EAAE,KAAKvB,KAAL,CAAWuB;AAA1B,KAAd;AACD;;AAiCDG,EAAAA,MAAM,GAAE;AACJhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWU,YAAvB;AACF,wBACE;AAAA,gBAQG,KAAKV,KAAL,CAAWU,YAAX,CAAwBI,GAAxB,CAA6Bb,QAAD,IAAa;AACtC,4BACI;AAAA,kCACI;AAAA,sBAAKA,QAAQ,CAACc;AAAd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKd,QAAQ,CAACX;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKW,QAAQ,CAACe;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKf,QAAQ,CAACgB;AAAd;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAQ,YAAA,OAAO,EAAE,MAAI,KAAKC,cAAL,CAAoBjB,QAApB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAZA;AARH;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAtE+B;;AAyElC,eAAehB,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nimport axios from 'axios';\r\n\r\nclass CartScreen extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cartProducts:[]\r\n    };\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.setState({cartProducts: this.props.cartProducts})\r\n  }\r\n\r\n  removeFromCart = async (item)=>{\r\n    var element = {}\r\n    element.productID = item.id;\r\n    var config = {\r\n      method: 'delete',\r\n      url: 'http://localhost:4000/cartItems',\r\n      headers: { \r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n    config.data = element;\r\n    console.log(config);\r\n    const {products} = this.state.cartItem.filter((i) => {\r\n        return i.id != item.id\r\n    })\r\n    console.log(products);\r\n    axios(config)\r\n    .then(function (response) {\r\n        \r\n        // this.setState({cartProducts: products})\r\n      console.log(JSON.stringify(response.data));\r\n       \r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n    \r\n  }\r\n\r\n\r\n\r\n  render(){\r\n      console.log(this.state.cartProducts)\r\n    return (\r\n      <div>\r\n        {/* <h1>{this.props.item[0].productName}</h1>\r\n        <h2>{this.props.item[0].description}</h2>\r\n        <div>\r\n          <button onClick={()=>this.add(this.props.item[0])}>\r\n              add\r\n          </button>\r\n        </div> */}\r\n        {this.state.cartProducts.map((cartItem) =>{\r\n            return(\r\n                <div>\r\n                    <h1>{cartItem.desc1ription}</h1> \r\n                    <h1>{cartItem.productID}</h1>\r\n                    <h1>{cartItem.price}</h1>\r\n                    <h1>{cartItem.quantity}</h1>\r\n                    <button onClick={()=>this.removeFromCart(cartItem)}>\r\n                        remove\r\n                    </button>\r\n                </div>\r\n            )\r\n        })}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CartScreen;"]},"metadata":{},"sourceType":"module"}